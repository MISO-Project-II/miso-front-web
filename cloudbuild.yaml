steps:
  - id: Package image
    name: gcr.io/cloud-builders/npm
    args: [ 'install' ]

  #  - id: Execute test
  #    name: gcr.io/cloud-builders/npm
  #    entrypoint: bash
  #    args:
  #      - -c
  #      - |
  #        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  #        apt update && apt install -y libappindicator1 fonts-liberation ./google-chrome-stable_current_amd64.deb
  #        npm run coverage

  #  - id: Sonar Analysis
  #    name: gcr.io/cloud-builders/npm
  #    args: [ 'run','sonar' ]

  - name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
    args:
      - '-Dsonar.host.url=http://34.67.142.84:9001'
      - '-Dsonar.login=admin'
      - '-Dsonar.password=admin123'
      - '-Dsonar.login=sqp_79c6b2bfe6bce7ddb6322f0976401750bc9f8571'
      - '-Dsonar.projectKey=sonarqube-front'
      - '-Dsonar.sources=src'
      - '-Dsonar.typescript.lcov.reportPaths=coverage/SportApp/lcov.info'
      - '-Dsonar.tests=src'
      - '-Dsonar.test.inclusions=**/*.spec.ts'

  - id: Docker Build
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-f','Dockerfile', '-t','gcr.io/$PROJECT_ID/${REPO_NAME}','.' ]

  - id: Docker push
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'push','gcr.io/$PROJECT_ID/${REPO_NAME}:v0' ]

  - id: Deploy Cloud Run
    name: 'gcr.io/cloud-builders/gcloud'
    args: [ 'run','deploy','${_IMAGE_NAME}',
            '--image','gcr.io/$PROJECT_ID/${REPO_NAME}:${TAG_NAME}',
            '--allow-unauthenticated',
            '--min-instances=1',
            '--max-instances=2',
            '--region=us-central1',
            '--project=$PROJECT_ID' ]
substitutions:
  _IMAGE_NAME: miso-front-web
